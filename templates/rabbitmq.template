{
   "AWSTemplateFormatVersion":"2010-09-09",
   "Description":"RabbitMQ template",
   "Parameters":{
      "xlcloud:defaultKeyName":{
         "Description":"Name of an existing EC2 KeyPair to enable SSH access",
         "Type":"String"
      },
      "xlcloud:defaultInstanceType":{
         "Description":"Default instance type (flavor) for instances in this stack",
         "Type":"String",
         "Default":"m1.small",
         "AllowedValues":[
            "m1.tiny",
            "m1.small",
            "m1.medium",
            "m1.large",
            "m1.xlarge"
         ],
         "ConstraintDescription":"must be a valid XLcloud instance type."
      },
      "xlcloud:defaultImageId":{
         "Description":"Default image name for instances in this stack",
         "Type":"String",
         "Default":"F19-x86_64-chef-solo",
         "AllowedValues":[
            "F19-x86_64-chef-solo"
         ],
         "ConstraintDescription":"must be a valid XLcloud image name."
      }
   },
   "Resources":{
      "IPAddress":{
         "Type":"AWS::EC2::EIP"
      },
      "IPAssoc":{
         "Type":"AWS::EC2::EIPAssociation",
         "Properties":{
            "InstanceId":{
               "Ref":"ActiveMQServer"
            },
            "EIP":{
               "Ref":"IPAddress"
            }
         }
      },
      "RabbitMQSecurityGroup":{
         "Type":"AWS::EC2::SecurityGroup",
         "Properties":{
            "GroupDescription":"Enable Stomp protocol via port 63613 plus SSH access",
            "SecurityGroupIngress":[
               {
                  "IpProtocol":"icmp",
                  "FromPort":"-1",
                  "ToPort":"-1",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"63613",
                  "ToPort":"63613",
                  "CidrIp":"0.0.0.0/0"
               },
               {
                  "IpProtocol":"tcp",
                  "FromPort":"22",
                  "ToPort":"22",
                  "CidrIp":"0.0.0.0/0"
               }
            ]
         }
      },
      "ActiveMQServer":{
         "Type":"AWS::EC2::Instance",
         "Metadata":{
            "AWS::CloudFormation::Init":{
               "config":{
                  "files":{
                     "/etc/chef/solo.rb":{
                        "content":{
                           "Fn::Join":[
                              "\n",
                              [
                                 "file_cache_path  '/var/chef/cache'",
                                 "cookbook_path    [ '/var/chef/chef-repo/cookbooks' ]",
                                 "role_path    [ '/var/chef/chef-repo/roles' ]",
                                 "log_level :info",
                                 "log_location STDOUT",
                                 "ssl_verify_mode :verify_none",
                                 "http_proxy 'http://10.197.217.62:3128'",
                                 "https_proxy 'http://10.197.217.62:3128'",
                                 "no_proxy '127.0.0.1,localhost'"
                              ]
                           ]
                        }
                     },
                     "/etc/chef/runlist-setup.json":{
                        "content":{
                           "run_list":[
                              "role[rabbitmq-for-mcollective]"
                           ]
                        }
                     },
                     "/root/.chef/knife.rb":{
                        "content":{
                           "Fn::Join":[
                              "\n",
                              [
                                 "cookbook_path  [ '/var/chef/chef-repo/cookbooks' ]",
                                 "role_path    [ '/var/chef/chef-repo/roles' ]",
                                 "http_proxy 'http://10.197.217.62:3128'",
                                 "https_proxy 'http://10.197.217.62:3128'",
                                 "no_proxy '127.0.0.1,localhost'"
                              ]
                           ]
                        }
                     },
                     "/var/chef/chef-repo/roles/rabbitmq-for-mcollective.json":{
                        "content":{
                           "name":"rabbitmq-for-mcollective",
                           "default_attributes":{
                              "rabbitmq":{
                                 "port":"63613",
                                 "virtualhosts":[
                                    "/"
                                 ],
                                 "enabled_plugins":[
                                    "amqp_client",
                                    "rabbitmq_stomp"
                                 ],
                                 "enabled_users":[
                                    {
                                       "name":"xlcloud",
                                       "password":"xlcloud",
                                       "rights":[
                                          {
                                             "vhost":"/",
                                             "conf":".*",
                                             "write":".*",
                                             "read":".*"
                                          }
                                       ]
                                    }
                                 ]
                              }
                           },
                           "override_attributes":{

                           },
                           "json_class":"Chef::Role",
                           "description":"This is a role to install rabbitmq for mcollective.",
                           "chef_type":"role",
                           "run_list":[
                              "recipe[rabbitmq]",
                              "recipe[rabbitmq::plugin_management]",
                              "recipe[rabbitmq::policy_management]",
                              "recipe[rabbitmq::user_management]",
                              "recipe[rabbitmq::virtualhost_management]"
                           ]
                        }
                     },
                     "/var/chef/chef-repo/Cheffile":{
                        "content":{
                           "Fn::Join":[
                              "\n",
                              [
                                 "#!/usr/bin/env ruby",
                                 "#^syntax detection",
                                 "site 'http://community.opscode.com/api/v1'",
                                 "cookbook 'rabbitmq',",
                                 "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',",
                                 "    :path => 'rabbitmq'"
                              ]
                           ]
                        }
                     }
                  }
               }
            }
         },
         "Properties":{
            "ImageId":{
               "Ref":"xlcloud:defaultImageId"
            },
            "InstanceType":{
               "Ref":"xlcloud:defaultInstanceType"
            },
            "KeyName":{
               "Ref":"xlcloud:defaultKeyName"
            },
            "SecurityGroups":[
            {
                  "Ref":"RabbitMQSecurityGroup"
            }
            ],
	    "Tags":[
            {
		"Key" : "StackId",
		"Value" : {Ref: "AWS::StackId"} 
	    }
	    ],
            "UserData":{
               "Fn::Base64":{
                  "Fn::Join":[
                     "\n",
                     [
                        "#!/bin/bash -xe",
			"export HOME=/root",
                        "source /etc/profile.d/proxy.sh",
                        "#curl -s http://169.254.169.254/latest/meta-data/hostname | sed 's/\\./-/g' > /etc/hostname",
                        "#set hostip=`curl -s http://169.254.169.254/latest/meta-data/local-ipv4`",
                        "#echo \"127.0.0.1 $(cat /etc/hostname)\" >> /etc/hosts",
                        "#echo \"${hostip} $(cat /etc/hostname)\" >> /etc/hosts",
                        "yum -y install gcc-c++ make wget tar rubygems ruby-devel",
                        "gem install --no-ri --no-rdoc librarian-chef",
                        "pip install --upgrade heat-cfntools",
                        "/bin/cfn-create-aws-symlinks",
                        "mkdir /var/chef",
                        "cd /var/chef",
                        "wget -O master.tar.gz http://github.com/opscode/chef-repo/tarball/master",
                        "tar -zxf master.tar.gz",
                        "mv opscode-chef-repo* chef-repo",
                        "rm master.tar.gz",
                        "/opt/aws/bin/cfn-init",
                        "cd /var/chef/chef-repo",
			"/usr/local/bin/librarian-chef install --clean --verbose",
                        "/bin/chef-solo -c /etc/chef/solo.rb -j /etc/chef/runlist-setup.json -L /var/log/chef-solo.log"
                     ]
                  ]
               }
            }
         }
      }
   },
   "Outputs":{
      "Private IP":{
         "Description":"Private IP of the ActiveMQ broker",
         "Value":{
            "Fn::Join":[
               "",
               [
                  {
                     "Fn::GetAtt":[
                        "ActiveMQServer",
                        "PublicIp"
                     ]
                  }
               ]
            ]
         }
      },
      "Public IP":{
         "Description":"Public IP of the ActiveMQ broker",
         "Value":{
            "Ref":"IPAddress"
         }
      }
   }
}
