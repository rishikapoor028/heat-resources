---
  AWSTemplateFormatVersion: "2010-09-09"
  Description: "mcollective template"
  Parameters: 
    xlcloud:defaultKeyName: 
      Description: "Name of an existing EC2 KeyPair to enable SSH access"
      Type: "String"
    xlcloud:defaultInstanceType: 
      Description: "Default instance type (flavor) for instances in this stack"
      Type: "String"
      Default: "m1.small"
      AllowedValues: 
        - "m1.tiny"
        - "m1.small"
        - "m1.medium"
        - "m1.large"
        - "m1.xlarge"
      ConstraintDescription: "must be a valid XLcloud instance type."
    xlcloud:defaultImageId: 
      Description: "Default image name for instances in this stack"
      Type: "String"
      Default: "F19-x86_64-chef-solo"
      AllowedValues: 
        - "F19-x86_64-chef-solo"
      ConstraintDescription: "must be a valid XLcloud image name."
    xlcloud:brokerAddress: 
      Type: "String"
      Default: "10.0.0.1"
      Description: "Rabbitmq broker address"
  Resources: 
    MCollectiveServerSecurityGroup: 
      Type: "AWS::EC2::SecurityGroup"
      Properties: 
        GroupDescription: "Enable Stomp protocol via port 63613 plus SSH access"
        SecurityGroupIngress: 
          - 
            IpProtocol: "icmp"
            FromPort: "-1"
            ToPort: "-1"
            CidrIp: "0.0.0.0/0"
          - 
            IpProtocol: "tcp"
            FromPort: "63613"
            ToPort: "63613"
            CidrIp: "0.0.0.0/0"
          - 
            IpProtocol: "tcp"
            FromPort: "22"
            ToPort: "22"
            CidrIp: "0.0.0.0/0"

    MCollectiveServer: 
      Type: "AWS::EC2::Instance"
      Metadata: 
        AWS::CloudFormation::Init: 
          config: 
            files: 
              /etc/chef/solo.rb: 
                content: 
                  Fn::Join: 
                    - "\n"
                    - 
                      - "file_cache_path  '/var//chef/cache'"
                      - "role_path    [ '/var/chef/chef-repo/roles' ]'"
                      - "cookbook_path    [ '/var/chef/chef-repo/cookbooks' ] ]"
                      - "log_level : info"
                      - "log_location STDOUT"
                      - "ssl_verify_mode :verify_none"
                      - "http_proxy 'http://10.197.217.62:3128'"
                      - "https_proxy 'http://10.197.217.62:3128'"
                      - "no_proxy '127.0.0.1,localhost'"
              /etc/chef/runlist-setup.json: 
                content: 
                  yum: 
                    proxy: "http://10.197.217.62:3128/"
                  mcollective: 
                    enable_puppetlabs_repo: "true"
                    loglevel: "debug"
                    stomp: 
                      hostname: 
                        Ref: "xlcloud:brokerAddress"
                      port: "63613"
                      username: "xlcloud"
                      password: "xlcloud"
                  run_list: 
                    - "role[mcollective-server-with-stomp-connector]"
              /var/chef/chef-repo/roles/mcollective-server-with-stomp-connector.json: 
                content: 
                  chef_type: "role"
                  default_attributes: {}
                  override_attributes: 
                    mcollective: 
                      connector: "stomp"
                      factsource: "ohai"
                  description: "This is a role to install mcollective server."
                  run_list: 
                    - "recipe[ohai]"
                    - "recipe[mcollective::server]"
                  json_class: "Chef::Role"
                  name: "mcollective-server-with-stomp-connector"
              /root/.chef/knife.rb: 
                content: 
                  Fn::Join: 
                    - "\n"
                    - 
                      - "cookbook_path  [ '/var/chef/chef-repo/cookbooks' ]"
                      - "http_proxy 'http://10.197.217.62:3128'"
                      - "https_proxy 'http://10.197.217.62:3128'"
                      - "no_proxy '127.0.0.1,localhost'"
              /var/chef/chef-repo/Cheffile: 
                content: 
                  Fn::Join: 
                    - "\n"
                    - 
                      - "#!/usr/bin/env ruby"
                      - "site 'http://community.opscode.com/api/v1'"
                      - "cookbook 'ohai'"
                      - "cookbook 'xlc-mcollective'"
                      - "    :git => 'git://gitorious.ow2.org/xlcloud/cookbooks.git'"
                      - "    :path => 'xlc-mcollective'"
      Properties: 
        ImageId: 
          Ref: "xlcloud:defaultImageId"
        InstanceType: 
          Ref: "xlcloud:defaultInstanceType"
        KeyName: 
          Ref: "xlcloud:defaultKeyName"
        SecurityGroups: 
          - 
            Ref: "MCollectiveServerSecurityGroup"
        UserData: 
          Fn::Base64: 
            Fn::Join: 
              - "\n"
              - 
                - "#!/bin/bash -xe"
                - "source /etc/profile.d/proxy.sh"
                - "#curl -s http://169.254.169.254/latest/meta-data/hostname | sed 's/\\./-/g' > /etc/hostname"
                - "#set hostip=`curl -s http://169.254.169.254/latest/meta-data/local-ipv4`"
                - "#echo \"127.0.0.1 $(cat /etc/hostname)\" >> /etc/hosts"
                - "#echo \"${hostip} $(cat /etc/hostname)\" >> /etc/hosts"
                - "yum -y install gcc-c++ make wget tar rubygems ruby-devel"
                - "gem install --no-ri --no-rdoc librarian-chef"
                - "gem install --no-ri --no-rdoc stomp"
                - "pip install --upgrade heat-cfntools"
                - "/bin/cfn-create-aws-symlinks"
                - "mkdir /var/chef"
                - "cd /var/chef"
                - "wget -O master.tar.gz http://github.com/opscode/chef-repo/tarball/master"
                - "tar -zxf master.tar.gz"
                - "mv opscode-chef-repo* chef-repo"
                - "rm master.tar.gz"
                - "/opt/aws/bin/cfn-init"
                - "cd /var/chef/chef-repo"
                - "/usr/local/bin/librarian-chef install --clean --verbose"
                - "/bin/chef-solo -c /etc/chef/solo.rb -j /etc/chef/runlist-setup.json -L /var/log/chef-solo.log"
  Outputs: 
    Internal IP: 
      Description: "URL of the MCollective Server"
      Value: 
        Fn::Join: 
          - ""
          - 
            - 
              Fn::GetAtt: 
                - "MCollectiveServer"
                - "PublicIp"
