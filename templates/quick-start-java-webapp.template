{
    "AWSTemplateFormatVersion":"2010-09-09",
    "Description":"Cluster with Apache Tomcat as a middleware. It starts applications from the Runlist using Chef-Solo.",
    "Parameters":{
        "RunList": {
          "Default": "{\"run_list\":[]}",
          "Description": "Collection of recipes to execute: This value will be overwritten when the stack is started",
          "NoEcho": "FALSE",
          "Type": "String"
        },
        "CookbooksUrl": {
          "Default": "http://internal.cookbooks.uri.base/vc_id/cookbooks.tar.gz",
          "Description": "Url of the application cookbooks archive: This value will be overwritten when the stack is started",
          "NoEcho": "FALSE",
          "Type": "String"
        }
    },
    "Resources":{
        "NodeSecurityGroup":{
            "Type":"AWS::EC2::SecurityGroup",
            "Properties":{
                "GroupDescription":"Enable HTTP access via port 80 plus SSH access",
                "SecurityGroupIngress":[
                   {
                       "IpProtocol":"icmp",
                       "FromPort":"-1",
                       "ToPort":"-1",
                       "CidrIp":"0.0.0.0/0"
                   },
                   {
                       "IpProtocol":"tcp",
                       "FromPort":"80",
                       "ToPort":"80",
                       "CidrIp":"0.0.0.0/0"
                   },
                   {
                       "IpProtocol":"tcp",
                       "FromPort":"8080",
                       "ToPort":"8080",
                       "CidrIp":"0.0.0.0/0"
                   },
                   {
                       "IpProtocol":"tcp",
                       "FromPort":"22",
                       "ToPort":"22",
                       "CidrIp":"0.0.0.0/0"
                   }
                ]
            }
        },
        "BatchNode":{
            "Type":"AWS::EC2::Instance",
            "Metadata":{
                "AWS::CloudFormation::Init":{
                    "config":{
                        "files":{
                            "/etc/chef/applications-runlist.json":{
                                "content": {
                                  "Ref" : "RunList"
                                },
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
                            },
                            "/etc/chef/middleware-runlist.json":{
                                "content":{
                                    "Fn::Join":[
                                        "\n",
                                        [
                                            "{ \"run_list\": [ \"recipe[tomcat]\"] }"
                                        ]
                                    ]
                                },
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
                            },
                            "/etc/chef/solo.rb":{
                                "content":{
                                    "Fn::Join":[
                                        "\n",
                                        [
                                            "file_cache_path  '/tmp/chef'",
                                            "cookbook_path    '/var/chef/cookbooks'",
                                            "log_level        :info",
                                            "log_location     STDOUT",
                                            "ssl_verify_mode  :verify_none",
                                            "http_proxy 'http://10.197.217.62:3128'",
                                            "https_proxy 'http://10.197.217.62:3128'",
                                            "no_proxy '127.0.0.1,localhost,10.197.217.70'"
                                        ]
                                    ]
                                },
                                "mode":"000644",
                                "owner":"root",
                                "group":"root"
                            },
                            "/etc/sudoers.hpc":{
                                "content":{
                                    "Fn::Join":[
                                        "\n",
                                        [
                                            "#Allow using sudo from non-terminal connections",
                                            "#Defaults    requiretty",
                                            "# Needed on all batch hosts and portal machine",
                                            "vca    ALL=(%portalusers)    NOPASSWD:ALL",
                                            "# Override built-in defaults",
                                            "Defaults               passwd_timeout=1"
                                        ]
                                    ]
                                },
                                "mode":"000700",
                                "owner":"root",
                                "group":"root"
                            }
                        }
                    }
                }
            },
            "Properties":{
                "ImageId":"F16-x86_64-cfntools-from-heat",
                "InstanceType":"m1.small",
                "SecurityGroups":[{"Ref":"NodeSecurityGroup"}],
                "UserData":{
                    "Fn::Base64":{
                        "Fn::Join":[
                            "\n",
                            [
                                "#!/bin/bash -vx",
                                "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1",
                                "# Flush iptables's default rules",
                                "/sbin/iptables -F",
                                "/sbin/iptables -X",
                                
                                "# adding technical user (FOR DEMO PURPOSE ONLY!)",
                                "useradd instance-admin",
                                "echo 'instance-admin' | passwd --stdin instance-admin",
                                
                                "# export proxies",
                                "export http_proxy=http://ecfrec.frec.bull.fr:8080",
                                "export https_proxy=http://ecfrec.frec.bull.fr:8080",
                                "export no_proxy=127.0.0.1,localhost,10.197.217.70",
                                "echo proxy=http://ecfrec.frec.bull.fr:8080/ >> /etc/yum.conf",
                                
                                "# installing some tools",
                                "yum -y install telnet mc wget",
                                "yum -y install expect expectk",
                                
                                "# calling cfn-init",
                                "/opt/aws/bin/cfn-init",
                                
                                "# adding technical user to sudoers (FOR DEMO PURPOSE ONLY!)",
                                "echo 'instance-admin ALL=(ALL) ALL' >> /etc/sudoers",
                                
                                "#Install chef-client and dependencies",
                                "rpm -Uvh http://rbel.frameos.org/rbel6",
                                "yum -y install ruby ruby-devel ruby-ri ruby-rdoc ruby-shadow gcc gcc-c++ automake autoconf make curl dmidecode",
                                "mkdir /tmp/firstboot",
                                "cd /tmp/firstboot",
                                "curl -O http://production.cf.rubygems.org/rubygems/rubygems-1.8.10.tgz",
                                "tar zxf rubygems-1.8.10.tgz",
                                "cd rubygems-1.8.10",
                                "ruby setup.rb --no-format-executable --no-rdoc --no-ri",
                                "gem install chef --no-ri --no-rdoc",
                                
                                "#Download cookbooks:",
                                "mkdir -p /var/chef/cookbooks",
                                "cd /var/chef/",
                                "curl -O http://10.197.217.70/middleware/tomcat.tar.gz",
                                "tar -xzvf tomcat.tar.gz",
                                
                                "#run middleware",
                                "chef-solo -j /etc/chef/middleware-runlist.json -c /etc/chef/solo.rb",
                                
                                "#Execute application runlist",
                                { "Fn::Join" : [ " ", [ "chef-solo -j /etc/chef/applications-runlist.json -c /etc/chef/solo.rb -r", { "Ref": "CookbooksUrl" } ] ] }
                            ]
                        ]
                    }
                }
            }
        },
        "node_eip": {"Type": "AWS::EC2::EIP"},
        "node_eip_assoc": {
          "Type": "AWS::EC2::EIPAssociation",
          "Properties": {
            "EIP": {"Ref": "node_eip"},
            "InstanceId": {"Ref": "BatchNode"}
          }
        }
    },
    "Outputs":{
        "InstanceId":{
            "Description":"InstanceId of the newly created EC2 instance",
            "Value":{
                "Ref":"BatchNode"
            }
        },
        "AZ":{
            "Description":"Availability Zone of the newly created EC2 instance",
            "Value":{
                "Fn::GetAtt":[
                    "BatchNode",
                    "AvailabilityZone"
                ]
            }
        },
        "PrivateIP":{
            "Description":"Private IP address of the newly created EC2 instance",
            "Value":{
                "Fn::GetAtt":[
                    "BatchNode",
                    "PublicIp"
                ]
            }
        },
        "applications-uri": {
          "Description": "URL to Apache Tomcat where applications are being deployed",
          "Value": {"Fn::Join": ["",
            ["http://", {"Ref": "node_eip"}, ":8080"]
          ]}
        }
    }
}
