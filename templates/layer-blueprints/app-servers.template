{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "java 3-tier application layer template",
  "Parameters": {
    "xlcloud:defaultKeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access",
      "Type": "String"
    },
    "xlcloud:defaultInstanceType": {
      "Description" : "Default instance type (flavor) for instances in this stack",
      "Type": "String",
      "AllowedValues":[
        "m1.tiny",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge"
      ],
      "ConstraintDescription":"must be a valid XLcloud instance type."
    },
    "xlcloud:defaultImageId": {
      "Description" : "Default image name for instances in this stack",
      "Type": "String",
      "AllowedValues":[
        "F17-x86_64",
        "F18-x86_64"
      ],
      "ConstraintDescription":"must be a valid XLcloud image name."
    },
    "xlcloud:TomcatNode:min": {
      "Type": "String",
      "Default": "1",
      "AllowedPattern": "[0-9]+",
      "ConstraintDescription": "invalid value"
    },
    "xlcloud:TomcatNode:max": {
      "Type": "String",
      "Default" : "1",
      "AllowedPattern": "[0-9]+",
      "ConstraintDescription": "invalid value"
    },
    "xlcloud:runlists/setup_default": {
      "Type": "String",
      "Default": "[]"
    },
    "xlcloud:runlists/setup_custom": {
      "Type": "String",
      "Default": "[]"
    },
    "xlcloud:runlists/configure_default": {
      "Type": "String",
      "Default": "[]"
    },
    "xlcloud:runlists/configure_custom": {
      "Type": "String",
      "Default": "[]"
    },
    "xlcloud:runlists/deploy_default": {
      "Type": "String",
      "Default": "[]"
    },
    "xlcloud:runlists/deploy_custom": {
      "Type": "String",
      "Default": "[]"
    },
    "xlcloud:runlists/undeploy_default": {
      "Type": "String",
      "Default": "[]"
    },
    "xlcloud:runlists/undeploy_custom": {
      "Type": "String",
      "Default": "[]"
    },
    "xlcloud:runlists/shutdown_default": {
      "Type": "String",
      "Default": "[]"
    },
    "xlcloud:runlists/shutdown_custom": {
      "Type": "String",
      "Default": "[]"
    },
    "xlcloud:cookbookRepositories": {
      "Type": "String",
      "Default" : "PENDING"
    }
  },
  "Resources" : {
    "TomcatNode":{
      "Type":"AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "AWS::CloudFormation::Init" : {
          "config" : {
            "files" : {
              "/etc/chef/solo.rb" : {
                "content":{
                  "Fn::Join":[
                      "\n",
                      [
                          "file_cache_path  '/tmp/chef'",
                          "cookbook_path    '/var/chef/cookbooks'",
                          "log_level        :info",
                          "log_location     STDOUT",
                          "ssl_verify_mode  :verify_none",
                          "http_proxy 'http://10.197.217.62:3128'",
                          "https_proxy 'http://10.197.217.62:3128'",
                          "no_proxy '127.0.0.1,localhost,10.197.217.70'"
                      ]
                  ]
                }
              },
              "/etc/chef/runlists/setup.json" : {
                "content" : { "Ref" : "xlcloud:runlists/setup" }
              },
              "/etc/chef/runlists/configure.json" : {
                "content" : { "Ref" : "xlcloud:runlists/configure" }
              },
              "/etc/chef/runlists/deploy.json" : {
                "content" : { "Ref" : "xlcloud:runlists/deploy" }
              },
              "/etc/chef/runlists/undeploy.json" : {
                "content" : { "Ref" : "xlcloud:runlists/undeploy" }
              },
              "/etc/chef/runlists/shutdown.json" : {
                "content" : { "Ref" : "xlcloud:runlists/shutdown" }
              }
            },
            "packages" : {
              "yum" : {
                "wget" : [],
                "tar" : []
              }
            },
            "commands" : {
              "1-chef-installation" : {
                "command" : "curl -L https://www.opscode.com/chef/install.sh | bash"
              },
              "2-setup-runlist" : {
               "command" : "chef-solo -j /etc/chef/runlists/setup.json > /var/log/chef.log"
              }
            }
          }
        }
      },
      "Properties":{
        "ImageId":{"Ref": "xlcloud:defaultImageId"},
        "InstanceType":{"Ref": "xlcloud:defaultInstanceType"},
        "KeyName" : { "Ref" : "xlcloud:defaultKeyName" },
        "SecurityGroups": [
              {"Ref": "DefaultSecurityGroup"}
        ],
        "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["\n", [
          "#!/bin/bash -xe",
          "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1",

          "# Flush iptables's default rules",
          "/sbin/iptables -F",
          "/sbin/iptables -X",

          "# export proxies",
          "echo 'export http_proxy=http://10.197.217.62:3128' >> /etc/bashrc",
          "echo 'export https_proxy=http://10.197.217.62:3128' >> /etc/bashrc",
          "echo 'export no_proxy=127.0.0.1,localhost,10.197.217.70,169.254.169.254' >> /etc/bashrc",
          "echo proxy=http://10.197.217.62:3128/ >> /etc/yum.conf",
          "source /root/.bashrc",

          "curl -s http://169.254.169.254/latest/meta-data/local-ipv4 | sed 's/\\./-/g' > /etc/hostname",
          "echo \"127.0.0.1 $(cat /etc/hostname)\" >> /etc/hosts",

          "# calling cfn-init",
          "/opt/aws/bin/cfn-init"
        ]]}}
      }
    },
    "TomcatNodeScaling": {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "TomcatNode" },
        "MinSize" : { "Ref" : "xlcloud:TomcatNode:min" },
        "MaxSize" : { "Ref" : "xlcloud:TomcatNode:max" }
      }
    },
    "DefaultSecurityGroup" : { 
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : { 
             "GroupDescription" : "Allow ssh connection to host",
             "SecurityGroupIngress" : [{
                 "IpProtocol" : "tcp",
                  "FromPort" : "22",
                  "ToPort" : "22",
                  "CidrIp" : "0.0.0.0/0"
              }], 
             "SecurityGroupEgress" : []
        }   
    }
  }
}
