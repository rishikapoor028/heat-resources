{
    "Description": "Deploy a monitoring node.",
    "HeatTemplateFormatVersion": "2012-12-12",
    "Outputs": {
        "MonitorIP": {
            "Description": "Private IP address of the Ganglia server",
            "Value": {
                "Fn::GetAtt": [
                    "MonitorNode",
                    "PrivateIp"
                ]
            }
        },
        "PublicURL": {
            "Description": "Monitoring dashboard URL",
            "Value": {
                "Fn::Join": [
                    "",
                    [
                        "http://",
                        {
                            "Ref": "NodeIPAddress"
                        },
                        "/ganglia"
                    ]
                ]
            }
        }
    },
    "Parameters": {
        "MonitorPort": {
            "Default": "8649",
            "Description": "TCP port of monitoring traffic data",
            "Type": "String"
        },
        "xlcloud:brokerAddress": {
            "Description": "RabbitMQ broker address",
            "Type": "String"
        },
        "xlcloud:brokerPassword": {
            "Description": "RabbitMQ broker password",
            "Type": "String"
        },
        "xlcloud:brokerPort": {
            "Description": "RabbitMQ broker port",
            "Type": "String"
        },
        "xlcloud:brokerUsername": {
            "Description": "RabbitMQ broker username",
            "Type": "String"
        },
        "xlcloud:defaultImageId": {
            "AllowedValues": [
                "F19-x86_64-xlcloud"
            ],
            "ConstraintDescription": "must be a valid XLcloud image name.",
            "Description": "Default image name for instances in this stack",
            "Type": "String"
        },
        "xlcloud:defaultInstanceType": {
            "ConstraintDescription": "must be a valid XLcloud instance type.",
            "Default": "m1.small",
            "Description": "Default instance type (flavor) for instances in this stack",
            "Type": "String"
        },
        "xlcloud:defaultKeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access",
            "Type": "String"
        },
        "xlcloud:layerSubnetUuid": {
            "Description": "The subnet identifier this layer is connected to",
            "Type": "String"
        },
        "xlcloud:monitoringCluster": {
            "Description": "Name of the cluster in the monitoring system",
            "Type": "String"
        },
        "xlcloud:stackId": {
            "Description": "Identifier of the parent stack",
            "Type": "String"
        },
        "xlcloud:stackSecret": {
            "Description": "Secret for service authentication",
            "NoEcho": "TRUE",
            "Type": "String"
        },
        "xlcloud:xmsAddress": {
            "Description": "Address of XLCloud Management System",
            "Type": "String"
        }
    },
    "Resources": {
        "MonitorNode": {
            "Metadata": {
                "AWS::CloudFormation::Init": {
                    "config": {
                        "files": {
                            "/etc/chef/configure-runlist.json": {
                                "content": {}
                            },
                            "/etc/chef/deploy-runlist.json": {
                                "content": {}
                            },
                            "/etc/chef/resume-runlist.json": {
                                "content": {}
                            },
                            "/etc/chef/setup-runlist.json": {
                                "content": {
                                    "ganglia": {
                                        "central_monit": "true",
                                        "cluster": {
                                            "collector_host": "127.0.0.1",
                                            "name": {
                                                "Ref": "xlcloud:monitoringCluster"
                                            }
                                        }
                                    },
                                    "mcollective": {
                                        "connector": "rabbitmq",
                                        "factsource": "ohai",
                                        "psk": "supersecret",
                                        "stomp": {
                                            "hostname": {
                                                "Ref": "xlcloud:brokerAddress"
                                            },
                                            "password": {
                                                "Ref": "xlcloud:brokerPassword"
                                            },
                                            "port": {
                                                "Ref": "xlcloud:brokerPort"
                                            },
                                            "username": {
                                                "Ref": "xlcloud:brokerUsername"
                                            }
                                        }
                                    },
                                    "run_list": [
                                        "recipe[ohai]",
                                        "recipe[mcollective::server]",
                                        "recipe[xlc-mco-agent]",
                                        "recipe[ganglia]",
                                        "recipe[ganglia::web]"
                                    ]
                                }
                            },
                            "/etc/chef/shutdown-runlist.json": {
                                "content": {}
                            },
                            "/etc/chef/suspend-runlist.json": {
                                "content": {}
                            },
                            "/etc/chef/undeploy-runlist.json": {
                                "content": {}
                            },
                            "/etc/xlcloud-facts.json": {
                                "content": {
                                    "layer_id": {
                                        "Ref": "AWS::StackId"
                                    },
                                    "logical_resource_id": "MonitorNode",
                                    "stack_id": {
                                        "Ref": "xlcloud:stackId"
                                    }
                                }
                            },
                            "/var/chef/chef-repo/Cheffile": {
                                "content": {
                                    "Fn::Join": [
                                        "\n",
                                        [
                                            "#!/usr/bin/env ruby",
                                            "site 'http://community.opscode.com/api/v1'",
                                            "cookbook 'ohai'",
                                            "cookbook 'mcollective',",
                                            "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',",
                                            "    :path => 'mcollective'",
                                            "cookbook 'xlc-mco-agent',",
                                            "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',",
                                            "    :path => 'xlc-mco-agent'",
                                            "cookbook 'ganglia',",
                                            "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',",
                                            "    :path => 'ganglia'"
                                        ]
                                    ]
                                },
                                "group": "root",
                                "mode": "00400",
                                "owner": "root"
                            }
                        }
                    }
                }
            },
            "Properties": {
                "ImageId": {
                    "Ref": "xlcloud:defaultImageId"
                },
                "InstanceType": {
                    "Ref": "xlcloud:defaultInstanceType"
                },
                "KeyName": {
                    "Ref": "xlcloud:defaultKeyName"
                },
                "SecurityGroups": [
                    {
                        "Ref": "MonitorSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "xlcloud:layerSubnetUuid"
                },
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -v\nexport MY_PUB_IPV4=$(http_proxy= curl -s http://169.254.169.254/latest/meta-data/public-ipv4)\nexport MY_HOSTNAME=$(http_proxy= curl -s http://169.254.169.254/latest/meta-data/instance-id)\necho $MY_HOSTNAME > /etc/hostname\nhostname $MY_HOSTNAME\nexport HOME=/root\necho $MY_PUB_IPV4 $MY_HOSTNAME >> /etc/hosts\nsource /etc/profile.d/proxy.sh\npip install --upgrade heat-cfntools\ncfn-init\ncd /var/chef/chef-repo\n/usr/local/bin/librarian-chef install --clean --verbose\n/bin/chef-solo -c /etc/chef/solo.rb -j /etc/chef/setup-runlist.json -L /var/log/chef-solo.log"
                            ]
                        ]
                    }
                }
            },
            "Type": "AWS::EC2::Instance"
        },
        "MonitorSecurityGroup": {
            "Properties": {
                "GroupDescription": "Firewall rules : SSH, HTTP(s) and Ganglia",
                "SecurityGroupIngress": [
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "-1",
                        "IpProtocol": "icmp",
                        "ToPort": "-1"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "80",
                        "IpProtocol": "tcp",
                        "ToPort": "80"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "443",
                        "IpProtocol": "tcp",
                        "ToPort": "443"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": "22",
                        "IpProtocol": "tcp",
                        "ToPort": "22"
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": {
                            "Ref": "MonitorPort"
                        },
                        "IpProtocol": "tcp",
                        "ToPort": {
                            "Ref": "MonitorPort"
                        }
                    },
                    {
                        "CidrIp": "0.0.0.0/0",
                        "FromPort": {
                            "Ref": "MonitorPort"
                        },
                        "IpProtocol": "udp",
                        "ToPort": {
                            "Ref": "MonitorPort"
                        }
                    }
                ],
                "VpcId": "neutron"
            },
            "Type": "AWS::EC2::SecurityGroup"
        },
        "NodeIPAddress": {
            "Type": "AWS::EC2::EIP"
        },
        "NodeIPAssoc": {
            "Properties": {
                "EIP": {
                    "Ref": "NodeIPAddress"
                },
                "InstanceId": {
                    "Ref": "MonitorNode"
                }
            },
            "Type": "AWS::EC2::EIPAssociation"
        }
    }
}
