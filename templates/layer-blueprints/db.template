{
  "AWSTemplateFormatVersion" : "2010-09-09",
  "Description" : "java 3-tier database layer template",
  "Parameters": {
    "xlcloud:defaultKeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access",
      "Type": "String"
    },
    "xlcloud:defaultInstanceType": {
      "Description" : "Default instance type (flavor) for instances in this stack",
      "Type": "String",
      "AllowedValues":[
        "m1.tiny",
        "m1.small",
        "m1.medium",
        "m1.large",
        "m1.xlarge"
      ],
      "ConstraintDescription":"must be a valid XLcloud instance type."
    },
    "xlcloud:defaultImageId": {
      "Description" : "Default image name for instances in this stack",
      "Type": "String",
      "AllowedValues":[
        "F17-x86_64",
        "F18-x86_64"
      ],
      "ConstraintDescription":"must be a valid XLcloud image name."
    },
    "xlcloud:layerSubnetUuid": {
      "Description" : "Project's network identifier",
      "Type": "String"
    },
    "xlcloud:DbNode:min": {
      "Type": "String",
      "Default" : "1",
      "AllowedPattern": "[0-9]+",
      "ConstraintDescription": "invalid value"
    },
    "xlcloud:DbNode:max": {
      "Type": "String",
      "Default" : "1",
      "AllowedPattern": "[0-9]+",
      "ConstraintDescription": "invalid value"
    },
    "xlcloud:runlists/setup_default": {
      "Type": "String",
      "Default": ""
    },
    "xlcloud:runlists/setup_custom": {
      "Type": "String",
      "Default": ""
    },
    "xlcloud:runlists/configure_default": {
      "Type": "String",
      "Default": ""
    },
    "xlcloud:runlists/configure_custom": {
      "Type": "String",
      "Default": ""
    },
    "xlcloud:runlists/deploy_default": {
      "Type": "String",
      "Default": ""
    },
    "xlcloud:runlists/deploy_custom": {
      "Type": "String",
      "Default": ""
    },
    "xlcloud:runlists/undeploy_default": {
      "Type": "String",
      "Default": ""
    },
    "xlcloud:runlists/undeploy_custom": {
      "Type": "String",
      "Default": ""
    },
    "xlcloud:runlists/shutdown_default": {
      "Type": "String",
      "Default": ""
    },
    "xlcloud:runlists/shutdown_custom": {
      "Type": "String",
      "Default": ""
    },
    "xlcloud:cookbookRepositories": {
      "Type": "String"
    }
  },
  "Resources" : {
    "DbNode": {
	  "Type":"AWS::AutoScaling::LaunchConfiguration",
	  "Metadata" : {
	    "AWS::CloudFormation::Init" : {
	      "config" : {
      		"files" : {
      		  "/etc/chef/runlists/phases.json" : {
      		     "content" : { "Fn::Join" : [ "", [
      		       "{",
      		       "  \"setup\": {",
      		       "    \"default\": [", {"Ref" : "xlcloud:runlists/setup_default"}, "],",
      		       "    \"custom\": [", {"Ref" : "xlcloud:runlists/setup_custom"}, "]",
      		       "  },",
      		       "  \"configure\": {",
      		       "    \"default\": [", {"Ref" : "xlcloud:runlists/configure_default"}, "],",
      		       "    \"custom\": [", {"Ref" : "xlcloud:runlists/configure_custom"}, "]",
      		       "  },",
      		       "  \"deploy\": {",
      		       "    \"default\": [", {"Ref" : "xlcloud:runlists/deploy_default"}, "],",
      		       "    \"custom\": [", {"Ref" : "xlcloud:runlists/deploy_custom"}, "]",
      		       "  },",
      		       "  \"undeploy\": {",
      		       "    \"default\": [", {"Ref" : "xlcloud:runlists/undeploy_default"}, "],",
      		       "    \"custom\": [", {"Ref" : "xlcloud:runlists/undeploy_custom"}, "]",
      		       "  },",
      		       "  \"shutdown\": {",
      		       "    \"default\": [", {"Ref" : "xlcloud:runlists/shutdown_default"}, "],",
      		       "    \"custom\": [", {"Ref" : "xlcloud:runlists/shutdown_custom"}, "]",
      		       "  }",
      		       "}"
      		     ]]}
      		  },
      		  "/etc/chef/cookbooks.list" : {
      		    "content" : { "Ref" : "xlcloud:cookbookRepositories" }
      		  }
      		},
      		"packages" : {
      		  "yum" : {
      		    "wget" : [],
      		    "tar" : [],
      		    "git" : []
      		  }
      		},
      		"commands" : {
      		  "1-git-proxy" : {
      		    "command" : "git config --global --add http.proxy http://10.197.217.62:3128"
      		  },
      		  "2-install-XIA": {
      		    "command" : "curl http://gitorious.ow2.org/xlcloud/vca/blobs/raw/master/scripts/xia-install.sh | bash -e"
      		  }
      		}
	      }
	    }
	  },
	  "Properties":{
	    "ImageId":{"Ref": "xlcloud:defaultImageId"},
	    "InstanceType":{"Ref": "xlcloud:defaultInstanceType"},
	    "KeyName" : { "Ref" : "xlcloud:defaultKeyName" },
	    "SecurityGroups": [  {"Ref": "xiaSecurityGroup"} ],
	    "UserData"       : { "Fn::Base64" : { "Fn::Join" : ["\n", [
	      "#!/bin/bash -xe",
	      "exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1",

	      "# Flush iptables's default rules",
	      "/sbin/iptables -F",
	      "/sbin/iptables -X",

	      "# export proxies",
	      "echo 'export http_proxy=http://10.197.217.62:3128' >> /etc/bashrc",
	      "echo 'export https_proxy=http://10.197.217.62:3128' >> /etc/bashrc",
	      "echo 'export no_proxy=127.0.0.1,localhost,10.197.217.70,169.254.169.254' >> /etc/bashrc",
	      "echo proxy=http://10.197.217.62:3128/ >> /etc/yum.conf",
	      "source /root/.bashrc",

	      "curl -s http://169.254.169.254/latest/meta-data/local-ipv4 | sed 's/\\./-/g' > /etc/hostname",
	      "echo \"127.0.0.1 $(cat /etc/hostname)\" >> /etc/hosts",

	      "# calling cfn-init",
	      "/opt/aws/bin/cfn-init"
	    ]]}}
	  }
	},
    "DbNode_defaultScaling": {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "DbNode" },
        "MinSize" : { "Ref" : "xlcloud:DbNode:min" },
        "MaxSize" : { "Ref" : "xlcloud:DbNode:max" }
      }
    },
    "xiaSecurityGroup" : {
        "Type" : "AWS::EC2::SecurityGroup",
        "Properties" : {
             "GroupDescription" : "Allow ssh connection to host and allow XSA to communicate with XIA",
             "SecurityGroupIngress" : [
               {
                 "IpProtocol" : "tcp",
                 "FromPort" : "22",
                 "ToPort" : "22",
                 "CidrIp" : "0.0.0.0/0"
               },
               {
                 "IpProtocol" : "udp",
                 "FromPort" : "38181",
                 "ToPort" : "38181",
                 "CidrIp" : "0.0.0.0/0"
               }
             ],
             "SecurityGroupEgress" : []
        }
    }
  }
}
