AWSTemplateFormatVersion: "2010-09-09"
Description: Simple Getting-Started Layer 

Parameters:
  "xlcloud:defaultKeyName":
    Description: "Name of an existing EC2 KeyPair to enable SSH access to the instances"
    Type: String
  "xlcloud:defaultImageId":
    Type: String
    ConstraintDescription: must be a valid XLcloud image name.
    AllowedValues:
    - F19-x86_64-xlcloud
    Description: Cloud image Id for instances in this stack
  "xlcloud:stackId":
     Description: "The identifier of the parent stack"
     Type: String
  "xlcloud:layerSubnetUuid":
     Description: "The subnet identifier this layer is connected to"
     Type: String
  "xlcloud:defaultInstanceType":
    AllowedValues: ["m1.small", "m1.medium", "m1.large", "m1.xlarge"]
    Type: String
    Default: "m1.small"
  "xlcloud:brokerAddress":
      Type: "String"
      Description: "RabbitMQ broker address"
  "xlcloud:brokerPort":
      Type: "String"
      Description: "RabbitMQ broker port"
  "xlcloud:brokerUsername":
      Type: "String"
      Description: "RabbitMQ broker username"
  "xlcloud:brokerPassword":
      Type: "String"
      Description: "RabbitMQ broker password"

Resources:
  LayerSecurityGroup:
      Type: "AWS::EC2::SecurityGroup"
      Properties:
        GroupDescription: "Enable SSH access + ICMP"
        VpcId: neutron
        SecurityGroupIngress:
          -
            IpProtocol: "icmp"
            FromPort: "-1"
            ToPort: "-1"
            CidrIp: "0.0.0.0/0"
          -
            IpProtocol: "tcp"
            FromPort: {Ref: "xlcloud:brokerPort"}
            ToPort: {Ref: "xlcloud:brokerPort"}
            CidrIp: "0.0.0.0/0"
          -
            IpProtocol: "tcp"
            FromPort: "22"
            ToPort: "22"
            CidrIp: "0.0.0.0/0"

  LoginNode:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            /etc/chef/setup-runlist.json:
              content:
                run_list:
                    - "recipe[getting-started]"

            /etc/xlcloud-facts.json:
                content:
                    layer_id: {Ref: 'AWS::StackId'}
                    stack_id: {Ref: 'xlcloud:stackId'}
                    logical_resource_id: "LoginNode"

            /var/chef/chef-repo/Cheffile: &Cheffile
              content:
                Fn::Join:
                  - "\n"
                  -
                    - "#!/usr/bin/env ruby"
                    - "site 'http://community.opscode.com/api/v1'"
                    - "cookbook 'ohai'"
                    - "cookbook 'getting-started'"
                    - "cookbook 'mcollective',"
                    - "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',"
                    - "    :path => 'mcollective'"
                    - "cookbook 'xlc-mco-agent',"
                    - "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',"
                    - "    :path => 'xlc-mco-agent'"
              mode: "00400"
              owner: root
              group: root

    Properties:
      ImageId: {Ref: 'xlcloud:defaultImageId'}
      InstanceType: {Ref: 'xlcloud:defaultInstanceType'}
      KeyName: {Ref: 'xlcloud:defaultKeyName'}
      Tags:
      - { Key: metering.StackId, Value: {Ref: 'AWS::StackId'}}
      SecurityGroups: [default,  {"Ref" : "LayerSecurityGroup"}]
      SubnetId: {Ref: 'xlcloud:layerSubnetUuid'}
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - '#!/bin/bash -ve

            '
            - '# HOME is required by librarian

            '
            - 'export HOME=/root

            '
            - 'source /etc/profile.d/proxy.sh

            '
            - 'echo `curl -s http://169.254.169.254/latest/meta-data/instance-id` > /etc/hostname

            '
            - 'hostname `cat /etc/hostname`

            '
            - 'pip install --upgrade heat-cfntools

            '
            - 'cfn-init

            '
            - 'cd /var/chef/chef-repo

            '
            - '/usr/local/bin/librarian-chef install --clean --verbose

            '
            - '/bin/chef-solo -c /etc/chef/solo.rb -j /etc/chef/setup-runlist.json -L /var/log/chef-solo.log

              '
Outputs:
  InstanceIp:
    Value: {"Fn::Join" : ["", ["ssh ec2-user@", {"Fn::GetAtt": ["LoginNode", "PublicIp"]}]]}
    Description: My ssh command 
