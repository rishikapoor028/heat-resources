# heat stack-create -f ganglia.yaml ganglia.T1 -P 'xlcloud:defaultKeyName=swannDev1'
HeatTemplateFormatVersion: '2012-12-12'
Outputs:
  MonitorIP:
    Description: Ganglia deployment
    Value:  {'Fn::GetAtt': ['MonitorNode', 'PrivateIp']}
Parameters:
  "xlcloud:brokerAddress": 
      Type: "String"
      Description: "Rabbitmq broker address"
  MonitorPort: {Default: '8649', Type: String, Description: TCP port of monitoring traffic data}
  stackName:
    Description: The Stack Name (used in ganglia web console)
    Type: String
    Default: 'stack'
    AllowedPattern: '[a-z|A-Z|0-9]*'
  parentStackID:
    Description: parentStackID
    Type: String
    Default: 'parentStackID:'
  parentIamAccessyKey:
    Description: parentIamAccessyKey
    Type: String
    Default: 'parentIamAccessyKey:'
  parentIamSecretKey:
    Description: parentIamSecretKey
    Type: String
    Default: 'parentIamSecretKey:'

## XLCLOUD default Params
 # xlcloud:defaultSubnetUuid: 
 #   Type: String
 #   ConstraintDescription: project doesn't have default subnet defined in XLcloud
 #   Description: Project's default subnet identifier
 #   Default: PENDING
 # xlcloud:defaultNetworkUuid: 
 #   Type: String
 #   ConstraintDescription: project doesn't have network defined in XLcloud
 #   Description: Project's network identifier
 #   Default: PENDING
  xlcloud:defaultImageId: 
    Type: String
    ConstraintDescription: must be a valid XLcloud image name.
    AllowedValues: 
    - F19-x86_64-chef-solo-librarian
    Description: Default image name for instances in this stack
  xlcloud:defaultInstanceType: 
    Type: String
    ConstraintDescription: must be a valid XLcloud instance type.
    AllowedValues: 
    - m1.tiny
    - m1.small
    - m1.medium
    - m1.large
    - m1.xlarge
    Description: Default instance type (flavor) for instances in this stack
    Default: m1.small
  xlcloud:defaultKeyName: 
    Type: String
    Description: Name of an existing EC2 KeyPair to enable SSH access

Resources:
  MonitorSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      SecurityGroupIngress:
      - {ToPort: '-1', IpProtocol: icmp, FromPort: '-1', CidrIp: 0.0.0.0/0}
      - {ToPort: '80', IpProtocol: tcp, FromPort: '80', CidrIp: 0.0.0.0/0}
      - {ToPort: '443', IpProtocol: tcp, FromPort: '443', CidrIp: 0.0.0.0/0}
      - {ToPort: '22', IpProtocol: tcp, FromPort: '22', CidrIp: 0.0.0.0/0}
        # all gmond of cluster send data here
      - {ToPort: {Ref: MonitorPort}, IpProtocol: tcp, FromPort: {Ref: MonitorPort}, CidrIp: 0.0.0.0/0}
      - {ToPort: {Ref: MonitorPort}, IpProtocol: udp, FromPort: {Ref: MonitorPort}, CidrIp: 0.0.0.0/0}
      GroupDescription: "Firewall rules : SSH, HTTP(s) and Ganglia"

  #CfnUser:
  #  Type: AWS::IAM::User
  #CfnUserKey:
  #  Type: AWS::IAM::AccessKey
  #  Properties:
  #    UserName: {Ref: CfnUser}

  MonitorNode:
    Type: AWS::EC2::Instance
    Properties:
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - |-
                #!/bin/bash -v
                exec > >(tee /var/log/user-data.log|logger -t user-data -s 2>/dev/console) 2>&1
                export MY_PUB_IPV4=$(http_proxy= curl -s http://169.254.169.254/latest/meta-data/public-ipv4)
                export MY_HOSTNAME=$(http_proxy= curl -s http://169.254.169.254/latest/meta-data/instance-id)
                echo $MY_HOSTNAME > /etc/hostname
                hostname $MY_HOSTNAME
                export HOME=/root
                echo $MY_PUB_IPV4 $MY_HOSTNAME >> /etc/hosts
                source /etc/profile.d/proxy.sh
                pip install --upgrade heat-cfntools
                cfn-init
                cd /var/chef/chef-repo
                /usr/local/bin/librarian-chef install --clean --verbose
                /bin/chef-solo -c /etc/chef/solo.rb -j /etc/chef/setup-runlist.json -L /var/log/chef-solo.log

      KeyName: {Ref: 'xlcloud:defaultKeyName'}
      SecurityGroups:
      - {Ref: MonitorSecurityGroup}
      InstanceType:
          Ref: 'xlcloud:defaultInstanceType'
      ImageId: 
          Ref: 'xlcloud:defaultImageId'
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            #/etc/cfn/cfn-credentials: &cfn-credentials-file
            #  content:
            #    Fn::Join:
            #    - ''
            #    - - AWSAccessKeyId=
            #      - {Ref: CfnUserKey}
            #      - '

            #        '
            #      - AWSSecretKey=
            #      - Fn::GetAtt: [CfnUserKey, SecretAccessKey]
            #      - '

            #        '
            #  owner: root
            #  group: root
            #  mode: '000400'
            #/etc/cfn/cfn-credentials-parent: &cfn-credentials-parent-file
            #  content:
            #    Fn::Join:
            #    - ''
            #    - - AWSAccessKeyId=
            #      - {Ref: parentIamAccessyKey}
            #      - '

            #        '
            #      - AWSSecretKey=
            #      - {Ref: parentIamSecretKey}
            #      - '

            #        '
            #      - parentStackID=
            #      - {Ref: parentStackID}
            #      - '

            #        '
            #  owner: root
            #  group: root
            #  mode: '000400'

            /etc/chef/deploy-runlist.json:
              content: ''
            /etc/chef/setup-runlist.json:
              content: 
                Fn::Join:
                  - ''
                  - - '{"mcollective":{ "enable_puppetlabs_repo":"true", "loglevel":"debug",'
                    - '"stomp":{ "hostname":"'
                    - {Ref: "xlcloud:brokerAddress"}
                    - '", "port":"63613", "username":"xlcloud", "password":"xlcloud" } },'
                    - '"ganglia" : { "central_monit" : true, "cluster" : {"collector_host" :"127.0.0.1",'
                    - '"name" : "slurm"}},  "run_list": [ "role[mcollective-server-with-stomp-connector]", "recipe[ganglia]","recipe[ganglia::web]", "recipe[ganglia::python_rr]"]}'
            /etc/chef/solo.rb:
              content:
                Fn::Join:
                  - "\n"
                  -
                    - "file_cache_path  '/var/chef/cache'"
                    - "role_path    [ '/var/chef/chef-repo/roles' ]"
                    - "cookbook_path    [ '/var/chef/chef-repo/cookbooks' ]"
                    - "log_level :info"
                    - "log_location STDOUT"
                    - "ssl_verify_mode :verify_none"
                    - "http_proxy 'http://10.197.217.62:3128'"
                    - "https_proxy 'http://10.197.217.62:3128'"
                    - "no_proxy '127.0.0.1,localhost'"
              owner: root
              group: root
              mode: '000644'
            /var/chef/chef-repo/roles/mcollective-server-with-stomp-connector.json: &mcollective-server-with-stomp-connector
              content: 
                  chef_type: "role"
                  default_attributes: {}
                  override_attributes: 
                    mcollective: 
                      connector: "stomp"
                      factsource: "ohai"
                  description: "This is a role to install mcollective server."
                  run_list: 
                    - "recipe[ohai]"
                    - "recipe[mcollective::server]"

                  json_class: "Chef::Role"
                  name: "mcollective-server-with-stomp-connector"

              mode: "00400"
              owner: root
              group: root

            /var/chef/chef-repo/Cheffile: &Cheffile
              content:
                Fn::Join:
                  - "\n"
                  - 
                    - "#!/usr/bin/env ruby"
                    - "site 'http://community.opscode.com/api/v1'"
                    - "cookbook 'ohai'"
                    - "cookbook 'mcollective',"
                    - "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',"
                    - "    :path => 'mcollective'"
                    - "cookbook 'ganglia',"
                    - "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',"
                    - "    :path => 'ganglia'"
              mode: "00400"
              owner: root
              group: root

  NodeIPAddress: {Type: 'AWS::EC2::EIP'}
  NodeIPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: {Ref: MonitorNode}
      EIP: {Ref: NodeIPAddress}
