AWSTemplateFormatVersion: "2010-09-09"
Description: Start an instance, install NVIDIA drivers, Ganglia and unzip
    TSP tools into /opt/space directory.

Parameters:
  "monitorAddress":
    Description: "IP address of the Ganglia Metadata server (gmond)"
    Type: String
  "nfsAddress":
    Description: "IP address of the NFS server"
    Type: String
  "xlcloud:defaultKeyName":
    Description: Name of an existing EC2 KeyPair to enable SSH access to
        the instances.
    Type: String
  "xlcloud:defaultImageId":
    Type: String
    ConstraintDescription: must be a valid XLcloud image name.
    Description: Cloud image Id for instances in this stack
  "xlcloud:stackId":
    Description: The identifier of the parent stack.
    Type: String
    Default: "Will be overwritten by XMS"
  "xlcloud:layerSubnetUuid":
    Description: The subnet identifier this layer is connected to.
    Type: String
  "xlcloud:defaultInstanceType":
    Type: String
  "xlcloud:brokerAddress":
      Type: "String"
      Description: "RabbitMQ broker address"
  "xlcloud:brokerPort":
      Type: "String"
      Description: "RabbitMQ broker port"
  "xlcloud:brokerUsername":
      Type: "String"
      Description: "RabbitMQ broker username"
  "xlcloud:brokerPassword":
      Type: "String"
      Description: "RabbitMQ broker password"
  "xlcloud:monitoringCluster":
      Type: "String"
      Description: "Name of the cluster in the monitoring system"
  "xlcloud:stackSecret":
      Description: "Secret for service authentication"
      Type: "String"
      NoEcho: "TRUE"
  "xlcloud:xmsAddress":
      Description: "Address of XLCloud Management System"
      Type: "String"

Mappings:
  InstanceTypes:
    "m1.small": { "gpu": "gpu.m2070q"}
    "m1.medium": {"gpu": "gpu.k340"}
    "m1.large": {"gpu": "gpu.k20xm"}
    "m1.xlarge": {"gpu": "gpu.k520"}
  Images:
    "CentOS-6.5-x86_64-xlcloud": {"gpu": "CentOS-6.5-x86_64-xlcloud-raw"}
    "F19-x86_64-xlcloud": {"gpu": "F19-x86_64-xlcloud-raw"}
    "ubuntu-12_04-x86_64-xlcloud": {"gpu": "ubuntu-12_04-x86_64-xlcloud-raw"}

Resources:
  NodeIPAddress: {Type: "AWS::EC2::EIP"}

  NodeIPAssoc:
    Type: AWS::EC2::EIPAssociation
    Properties:
      InstanceId: {Ref: GPUInstance}
      EIP: {Ref: NodeIPAddress}

  LayerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: "Enable SSH access, ICMP and VNC"
      SecurityGroupIngress:
        -
          IpProtocol: "icmp"
          FromPort: "-1"
          ToPort: "-1"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "22"
          ToPort: "22"
          CidrIp: "0.0.0.0/0"
        -
          IpProtocol: "tcp"
          FromPort: "5900"
          ToPort: "5910"
          CidrIp: "0.0.0.0/0"

  IReadyHandle:
    Type: AWS::CloudFormation::WaitConditionHandle

  InstanceReady:
    Type: AWS::CloudFormation::WaitCondition
    DependsOn: GPUInstance
    Properties:
      Handle: {Ref: IReadyHandle}
      Count: 1
      Timeout: '3600'

  GPUInstance:
    Type: AWS::EC2::Instance
    Metadata:
      AWS::CloudFormation::Init:
        config:
          files:
            /etc/xlcloud/facts.json:
              content:
                layer_id: {Ref: 'AWS::StackId'}
                stack_id: {Ref: 'xlcloud:stackId'}
                logical_resource_id: "GPUInstance"
              mode: "00400"
              owner: root
              group: root

            /etc/chef/setup-runlist.json:
              content:
                mcollective:
                  connector: "rabbitmq"
                  factsource: "ohai"
                  psk: "supersecret"
                  stomp:
                    hostname: {Ref: "xlcloud:brokerAddress"}
                    port: {Ref: "xlcloud:brokerPort"}
                    username: {Ref: "xlcloud:brokerUsername"}
                    password: {Ref: "xlcloud:brokerPassword"}
                ganglia:
                  central_monit: "false"
                  cluster:
                    collector_host: {Ref: "monitorAddress"}
                    name: {Ref: "xlcloud:monitoringCluster"}
                nfs-client:
                  server: {Ref: "nfsAddress"}
                run_list:
                  - "recipe[ohai]"
                  - "recipe[mcollective::server]"
                  - "recipe[xlc-mco-agent]"
                  - "recipe[nfs-client::setup]"
                  - "recipe[rr-vc::setup]"
#                  - "recipe[rr-vc::tsp]"
                  - "recipe[ganglia]"
                  - "recipe[ganglia::stack]"
                  - "recipe[ganglia::python_rr]"

            /etc/chef/configure-runlist.json:
              content: {}

            /etc/chef/deploy-runlist.json:
              content: {}

            /etc/chef/undeploy-runlist.json:
              content: {}

            /etc/chef/suspend-runlist.json:
              content: {}

            /etc/chef/resume-runlist.json:
              content: {}

            /etc/chef/shutdown-runlist.json:
              content: {}

            /var/chef/chef-repo/Cheffile:
              content:
                Fn::Join:
                  - "\n"
                  -
                    - "#!/usr/bin/env ruby"
                    - "site 'http://community.opscode.com/api/v1'"
                    - "cookbook 'ohai'"
                    - "cookbook 'mcollective',"
                    - "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',"
                    - "    :path => 'mcollective'"
                    - "cookbook 'xlc-common',"
                    - "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',"
                    - "    :path => 'xlc-common'"
                    - "cookbook 'xlc-mco-agent',"
                    - "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',"
                    - "    :path => 'xlc-mco-agent'"
                    - "cookbook 'ganglia',"
                    - "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',"
                    - "    :path => 'ganglia'"
                    - "cookbook 'nfs-client',"
                    - "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',"
                    - "    :path => 'nfs-client'"
                    - "cookbook 'rr-vc',"
                    - "    :git => 'http://git.gitorious.ow2.org/~xlcloud-continuous-integration/xlcloud/cookbooks-ci.git',"
                    - "    :path => 'rr-vc'"
              mode: "00400"
              owner: root
              group: root

    Properties:
      ImageId: {'Fn::FindInMap': ["Images", {Ref: "xlcloud:defaultImageId"}, "gpu"]}
      InstanceType: {'Fn::FindInMap': ["InstanceTypes", {Ref: "xlcloud:defaultInstanceType"}, "gpu"]}
      KeyName: {Ref: 'xlcloud:defaultKeyName'}
      SecurityGroups: [{"Ref" : "LayerSecurityGroup"}]
      SubnetId: {Ref: 'xlcloud:layerSubnetUuid'}
      Tags:
      - { Key: metering.StackId, Value: {Ref: 'AWS::StackId'}}
      UserData:
        Fn::Base64:
          Fn::Join:
          - ''
          - - '#!/bin/bash -ve

            '
            - '# HOME is required by librarian

            '
            - 'export HOME=/root

            '
            - 'source /etc/profile

            '
            - 'echo `curl -s http://169.254.169.254/latest/meta-data/instance-id` > /etc/hostname

            '
            - 'hostname `cat /etc/hostname`

            '
            - 'pip install --upgrade heat-cfntools

            '
            - 'cfn-init

            '
            - 'cd /var/chef/chef-repo

            '
            - 'librarian-chef install --clean --verbose

            '
            - '/bin/chef-solo -c /etc/chef/solo.rb -j /etc/chef/setup-runlist.json -L /var/log/chef-solo.log

            '
            - "cfn-signal -e 0 -i $(hostname) '"
            - {Ref: IReadyHandle}
            - "'"
